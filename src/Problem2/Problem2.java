package Problem2;

/**
 * Problem 2:
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous
 * two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not
 * exceed four million, find the sum of the even-valued terms.
 *
 *
 * Created by Andrew on 3/24/2018.
 */
public class Problem2 {

    public static void main(String args[]){
        System.out.println(sumFibonacci(4000000));
    }

    public static int sumFibonacci(int sumUntil) throws
            IllegalArgumentException{
        int sum = 0;
        int prevNumber = 1;
        int currNumber = 1;

        if (sumUntil < 0)
            throw new IllegalArgumentException("Argument must be at least 1.");

        while (currNumber <= sumUntil){
            if (currNumber % 2 == 0)
                sum += currNumber;

            currNumber += prevNumber;
            prevNumber = currNumber - prevNumber;
        }
        return sum;
    }

    public static int sumFibonacciRecursive(int sumUntil) throws
            IllegalArgumentException{
        if (sumUntil < 0)
            throw new IllegalArgumentException("Argument must be at least 1.");

        return sumFibonacciRecursiveHelper(1, 1, sumUntil);
    }

    private static int sumFibonacciRecursiveHelper(int prevNumber,
                                                   int currNumber,
                                                   int sumUntil){
        if (currNumber > sumUntil)
            return 0;

        if (currNumber % 2 == 0)
            return currNumber + sumFibonacciRecursiveHelper(currNumber,
                    prevNumber + currNumber, sumUntil);
        else
            return sumFibonacciRecursiveHelper(currNumber,
                    prevNumber + currNumber, sumUntil);
    }
}
/**
 * Once again, there is an interesting, more mathy way to get a solution that
 * is far more efficient than the loop as shown. It involves knowing the golden
 * ratio, phi, and then realizing the ratio between two even numbers in the
 * Fibonacci series is phi^3 because even numbers in the series are separated
 * by three numbers in the series. From here, you can start with the first even
 * Fibonacci number (2), multiplying and taking the floor of the number
 * received until you reach a number over 4,000,000 (not adding that number to
 * the sum).
 *
 * I find a hard time reaching a balance with these problems, because I realize
 * finding an optimal knowledge requires deep understanding of mathematics
 * somewhere on the mathematician level. While I can search for this online
 * (although I did minor in mathematics, many of these topics are not those
 * taught in the traditional computer science/physics curriculum, and certainly
 * haven't been used since I joined the work force), I worry that I will
 * accidentally stumble upon the answer to the question by searching about the
 * problem provided. This would ruin the purpose of challenging myself with
 * these problems in the first place. So I choose to be less optimal, knowing
 * that I am bettering myself, and coming to terms with the fact that I'm most
 * likely not going to rediscover obscure mathematical properties by myself
 * in attempting to solve these problems.
 */